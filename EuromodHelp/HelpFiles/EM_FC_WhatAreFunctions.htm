<!DOCTYPE html>
<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<link rel="stylesheet" href="files/style.css" />
<title>What are functions?</title>
</head>

<body>

<h1>What are functions?</h1>

<p>The example below illustrates how EUROMOD functions are used
to implement a simple child benefit of 100 Euro monthly, received by families
with at least one child aged younger than three. The benefit is implemented by
using two functions: one describing the eligibility rule, i.e. there must be a
child younger than three in the family, and the other describing the
calculation of the benefit, i.e. payment of 100 Euro monthly.</p>

<table class="spine">
	<caption>Example 1:</caption>
	<tr class="policy">
		<td>Policy</td>
		<td class="system">SL_demo</td>
		<td>Comment</td>
	</tr>
	<tr class="function">
		<td>Elig</td>
		<td class="on">on</td>
		<td>eligibility rule</td>
	</tr>
	<tr>
		<td>elig_cond</td>
		<td>dag &lt; 3</td>
		<td>there must be</td>
	</tr>
	<tr>
		<td>TAX_UNIT</td>
		<td>tu_sben_family_sl</td>
		<td>at least one child aged younger than three</td>
	</tr>
	<tr class="function">
		<td>ArithOp</td>
		<td class="on">on</td>
		<td>benefit calculation</td>
	</tr>
	<tr>
		<td>who_must_be_elig</td>
		<td>one</td>
		<td></td>
	</tr>
	<tr>
		<td>formula</td>
		<td>100#m</td>
		<td>the benefit amounts to 100 € per month</td>
	</tr>
	<tr>
		<td>output_var</td>
		<td>bch_s</td>
		<td></td>
	</tr>
	<tr>
		<td>TAX_UNIT</td>
		<td>tu_sben_family_sl</td>
		<td></td>
	</tr>
</table>

<p>Each function consists of a header
displaying the <strong>name of the function</strong>.
In the example the eligibility rule is implemented by a
function called Elig and the calculation of the benefit is implemented by a function called ArithOp. Moreover, each function
has a &quot;<strong>switch</strong>&quot;, defining whether the
function is activated or not. In the example both functions are switched on.
The possibility of switching off a function may, for example, be used if a
reform scenario is implemented, where there is no eligibility condition, as
illustrated in the next example. In this example this results in each family
receiving the benefit, irrespective of having a child aged younger than three
(or any other condition).</p>

<table class="spine">
	<caption>Example 2:</caption>
	<tr class="policy">
		<td>Policy</td>
		<td class="system">SL_demo</td>
		<td class="system">SL_reform</td>
		<td>Comment</td>
	</tr>
	<tr class="function">
		<td>Elig</td>
		<td class="on">on</td>
		<td class="changed off">off</td>
		<td>eligibility rule</td>
	</tr>
	<tr>
		<td>elig_cond</td>
		<td>dag &lt; 3</td>
		<td>dag &lt; 3</td>
		<td>there must be</td>
	</tr>
	<tr>
		<td>TAX_UNIT</td>
		<td>tu_sben_family_sl</td>
		<td>tu_sben_family_sl</td>
		<td>at least one child aged younger than three</td>
	</tr>
	<tr class="function">
		<td>ArithOp</td>
		<td class="on">on</td>
		<td class="on">on</td>
		<td>benefit calculation</td>
	</tr>
	<tr>
		<td>who_must_be_elig</td>
		<td>one</td>
		<td class="changed">n/a</td>
		<td></td>
	</tr>
	<tr>
		<td>formula</td>
		<td>100#m</td>
		<td class="changed">50#m</td>
		<td>the benefit amounts to 100/50 € per month</td>
	</tr>
	<tr>
		<td>output_var</td>
		<td>bch_s</td>
		<td>bch_s</td>
		<td></td>
	</tr>
	<tr>
		<td>TAX_UNIT</td>
		<td>tu_sben_family_sl</td>
		<td>tu_sben_family_sl</td>
		<td></td>
	</tr>
</table>

<p>In addition to name
and switch a function consists of parameters to
specify its behaviour. The leftmost column in the examples contains the <strong>names of the parameters</strong> used, whereas
the &quot;SL_demo&quot; headed column contains the <strong>parameter values</strong> for the system &quot;SL_demo&quot;. In the
second example there is another column for the system &quot;SL_reform&quot;,
illustrating that parameter values can be different for each system. In the
example the amount of the benefit is changed from 100 to 50 Euro in the reform
scenario.</p>

<p>Each function offers a different
set of parameters to specify its behaviour. For example, the general purpose of
the function Elig is to
implement conditions under which a benefit is received / a tax must be paid.
Therefore, it offers parameters that allow the specification of such
conditions. For the child benefit the parameter elig_cond is used. This parameter takes
&quot;formulas&quot; with a yes/no result as values, in the example dag&lt;3, i.e. the variable for age must be smaller than
three. The general purpose of the other function used, ArithOp, is to implement arithmetical operations.
Consequently, it offers parameters to specify the operation. For the child
benefit the parameter formula is used to define a
very simple operation - it is just set to the amount of 100 respectively 50 (#m
stands for monthly).</p>

<p>Each function, which calculates some result, offers the
parameter output_var to
define a variable, which takes this result. In the example the parameter output_var of the function ArithOp is set to the variable bch_s (b=benefit, ch=child, _s=simulated), i.e. this variable takes the
amount of the benefit, for families fulfilling the eligibility condition. The
parameter output_var is
not used with the function Elig
in the example, thought the function calculates a
result, which is either one, if eligibility conditions are fulfilled, or zero,
if not. So where does the function write its result to? The simple answer is
that the function has a default output variable called sel_s (s=system, el=eligibility, _s=simulated),
which means that, if no other output variable is indicated by using the
parameter output_var, the result is written to sel_s.</p>

<p>The next question that may be posed is: how does the
function ArithOp know that
it should fill the variable bch_s
with the benefit amount only for those families fulfilling the eligibility
condition calculated by the function Elig?
This is accomplished by the parameter who_must_be_elig
and explained in section <a href="EM_FC_InteractionsBetweenFunctions.htm">EUROMOD
Functions - Interactions between functions</a>.</p>

<p>&nbsp;</p>

</div>

</body>

</html>
