//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EM_BackEnd {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EM_BackEnd.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string BackEnd_css {
            get {
                return ResourceManager.GetString("BackEnd_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // This function will make a new call to EM_BackEnd using the given URL and parameters, and runs the supplied function on the response
        ///function embe_BackEndRequest(functionToRun, URL, URLparams) {
        ///    xhttp = new XMLHttpRequest();
        ///    xhttp.onload = function () {
        ///		if (this.responseText == null || this.responseText == &quot;&quot;) alert(&quot;Error: empty response for &apos;&quot;+URL+&quot;&apos; with &apos;&quot;+URLparams+&quot;&apos;&quot;);
        ///		else
        ///		{
        ///            var response;
        ///			try
        ///            {
        ///                response = JSON.parse(this.responseTe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BackEnd_js {
            get {
                return ResourceManager.GetString("BackEnd_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @keyframes chartjs-render-animation{from{opacity:.99}to{opacity:1}}.chartjs-render-monitor{animation:chartjs-render-animation 1ms}.chartjs-size-monitor,.chartjs-size-monitor-expand,.chartjs-size-monitor-shrink{position:absolute;direction:ltr;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1}.chartjs-size-monitor-expand&gt;div{position:absolute;width:1000000px;height:1000000px;left:0;top:0}.chartjs-size-monitor-shrink&gt;div{position:absolute;width:200%;height:200%;left [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Chart_min_css {
            get {
                return ResourceManager.GetString("Chart_min_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * Chart.js v2.8.0
        /// * https://www.chartjs.org
        /// * (c) 2019 Chart.js Contributors
        /// * Released under the MIT License
        /// */
        ///!function(t,e){&quot;object&quot;==typeof exports&amp;&amp;&quot;undefined&quot;!=typeof module?module.exports=e(function(){try{return require(&quot;moment&quot;)}catch(t){}}()):&quot;function&quot;==typeof define&amp;&amp;define.amd?define([&quot;require&quot;],function(t){return e(function(){try{return t(&quot;moment&quot;)}catch(t){}}())}):t.Chart=e(t.moment)}(this,function(t){&quot;use strict&quot;;t=t&amp;&amp;t.hasOwnProperty(&quot;default&quot;)?t.default:t;var e={rgb2hsl:i,rg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Chart_min_js {
            get {
                return ResourceManager.GetString("Chart_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] help {
            get {
                object obj = ResourceManager.GetObject("help", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] home {
            get {
                object obj = ResourceManager.GetObject("home", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] load {
            get {
                object obj = ResourceManager.GetObject("load", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div id=&quot;embe-id-msg-box&quot; style=&quot;display: none; position: absolute; top: 0px; bottom: 0px; left: 0px; right: 0px; z-index: 1000; overflow: hidden;&quot; onclick=&quot;document.getElementById(&apos;embe-id-msg-box&apos;).style.display=&apos;none&apos;&quot;&gt;
        ///    &lt;div id=&quot;modal-bakground&quot; style=&quot;display: block; position: absolute; top: 0px; bottom: 0px; left: 0px; right: 0px; background-color: black; opacity: 0.3; overflow: hidden;&quot;&gt;&lt;/div&gt;
        ///    &lt;div style=&quot;display: block; position: absolute; top: 100px; bottom: 100px; left: 100px; right: 100p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MessageBox_html {
            get {
                return ResourceManager.GetString("MessageBox_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] save {
            get {
                object obj = ResourceManager.GetObject("save", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] save_all {
            get {
                object obj = ResourceManager.GetObject("save_all", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;w3-container&quot;&gt;
        ///    &lt;div id=&quot;embe-id-modal-getstring&quot; class=&quot;w3-modal&quot;&gt;
        ///        &lt;div class=&quot;w3-modal-content w3-card-4 w3-animate-zoom&quot; style=&quot;max-width:600px&quot;&gt;
        ///            &lt;div class=&quot;w3-center&quot;&gt;
        ///                &lt;br&gt;
        ///                &lt;span onclick=&quot;document.getElementById(&apos;embe-id-modal-getstring&apos;).style.display=&apos;none&apos;&quot; class=&quot;w3-button w3-large w3-hover-deep-orange w3-display-topright&quot; title=&quot;Close Modal&quot;&gt;&amp;times;&lt;/span&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;w3-container&quot;&gt;
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StringInputBox_html {
            get {
                return ResourceManager.GetString("StringInputBox_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .tlite {
        ///  background: #111;
        ///  color: white;
        ///  font-family: sans-serif;
        ///  font-size: 0.8rem;
        ///  font-weight: normal;
        ///  text-decoration: none;
        ///  text-align: left;
        ///  padding: 0.6em 0.75rem;
        ///  border-radius: 4px;
        ///  position: absolute;
        ///  opacity: 0;
        ///  visibility: hidden;
        ///  transition: opacity 0.4s;
        ///  white-space: nowrap;
        ///  box-shadow: 0 0.5rem 1rem -0.5rem black;
        ///  z-index: 1000;
        ///  -webkit-backface-visibility: hidden;
        ///}
        ///
        ///.tlite-table td,
        ///.tlite-table th {
        ///  position: relative;
        ///}
        ///
        ///.tlite- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tlite_css {
            get {
                return ResourceManager.GetString("tlite_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function tlite(t){document.addEventListener(&quot;mouseover&quot;,function(e){var i=e.target,n=t(i);n||(n=(i=i.parentElement)&amp;&amp;t(i)),n&amp;&amp;tlite.show(i,n,!0)})}tlite.show=function(t,e,i){var n=&quot;data-tlite&quot;;e=e||{},(t.tooltip||function(t,e){function o(){tlite.hide(t,!0)}function l(){r||(r=function(t,e,i){function n(){o.className=&quot;tlite tlite-&quot;+r+s;var e=t.offsetTop,i=t.offsetLeft;o.offsetParent===t&amp;&amp;(e=i=0);var n=t.offsetWidth,l=t.offsetHeight,d=o.offsetHeight,f=o.offsetWidth,a=i+n/2;o.style.top=(&quot;s&quot;===r?e-d-10:&quot;n&quot;===r?e [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tlite_min_js {
            get {
                return ResourceManager.GetString("tlite_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* W3.CSS 4.12 November 2018 by Jan Egil and Borge Refsnes */
        ///html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}
        ////* Extract from normalize.css by Nicolas Gallagher and Jonathan Neal git.io/normalize */
        ///html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}
        ///article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}
        ///audio,canvas,progress,video{display:inline-block}progress{vertical-align:baseline}
        ///audio:not([controls]){display:n [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string w3_css {
            get {
                return ResourceManager.GetString("w3_css", resourceCulture);
            }
        }
    }
}
