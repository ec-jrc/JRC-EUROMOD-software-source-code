<!DOCTYPE html>
<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<link rel="stylesheet" href="files/style.css" />
<title>Summary of parameters for function UnitLoop</title>
</head>

<body>

<h1>Summary of parameters for function UnitLoop</h1>
<p>Allows for repeating part (or all) of the tax-benefit calculation.</p>

<h4>Function Specific Parameters</h4>
<table class="info">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Compulsory</th>
		<th>Unique</th>
		<th>Default</th>
		<th>Mutually exclusive with</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>Loop_Id</td>
		<td>text</td>
		<td>yes</td>
		<td>yes</td>
		<td></td>
		<td></td>
		<td>Unique identifier for the loop.<br>The identifier is used amongst others for constructing the name of the loop count variable 'LoopCount_Loop_Id'.</td>
	</tr>
	<tr>
		<td>Elig_Unit</td>
		<td>taxunit</td>
		<td>yes</td>
		<td>yes</td>
		<td></td>
		<td></td>
		<td>Calculations are repeated for each Elig_Unit within the household.</td>
	</tr>
	<tr>
		<td>Elig_Unit_Cond</td>
		<td>condition</td>
		<td>no</td>
		<td>yes</td>
		<td>{1}</td>
		<td></td>
		<td>Calculations are only carried out for Elig_Units, which are fulfil this condition.</td>
	</tr>
	<tr>
		<td>Elig_Unit_Cond_Who</td>
		<td>categorical</td>
		<td>no</td>
		<td>yes</td>
		<td>all</td>
		<td></td>
		<td>Defines which members of the unit must fulfil Elig_Unit_Cond to make the unit fulfil the condition.<br>For possible values see the common parameter Who_Must_Be_Elig.</td>
	</tr>
	<tr>
		<td>Run_Once_If_No_Elig</td>
		<td>yes/no</td>
		<td>no</td>
		<td>yes</td>
		<td>no</td>
		<td></td>
		<td>If there is no Elig_Unit within the household, which fulfils Elig_Unit_Cond:<br>If set to yes: policies enclosed by the loop are still carried out (once).<br>If set to no: the polices enclosed by the loop are not carried out.</td>
	</tr>
	<tr>
		<td>First_Pol</td>
		<td>text</td>
		<td>yes (if no substitute is defined)</td>
		<td>yes</td>
		<td></td>
		<td>First_Func, Start_After_Pol, Start_After_Func</td>
		<td>Name of loop's first policy.</td>
	</tr>
	<tr>
		<td>First_Func</td>
		<td>text</td>
		<td>yes (if no substitute is defined)</td>
		<td>yes</td>
		<td></td>
		<td>First_Pol, Start_After_Pol, Start_After_Func</td>
		<td>Identifier of loop's first function.<br>The identifier cannot refer to functions which are independent of the policy spine (func_loop, func_unitloop, etc.).<br>(See 'EUROMOD Functions - Identifiers and the placeholders =cc= and =sys=' for information on identifiers.)</td>
	</tr>
	<tr>
		<td>Start_After_Pol</td>
		<td>text</td>
		<td>yes (if no substitute is defined)</td>
		<td>yes</td>
		<td></td>
		<td>First_Pol, First_Func, Start_After_Func</td>
		<td>Name of the policy after which the loop starts.</td>
	</tr>
	<tr>
		<td>Start_After_Func</td>
		<td>text</td>
		<td>yes (if no substitute is defined)</td>
		<td>yes</td>
		<td></td>
		<td>First_Pol, First_Func, Start_After_Pol</td>
		<td>Identifier of the function after which the loop starts.<br>The identifier cannot refer to functions which are independent of the policy spine (func_loop, func_unitloop, etc.).<br>(See 'EUROMOD Functions - Identifiers and the placeholders =cc= and =sys=' for information on identifiers.)</td>
	</tr>
	<tr>
		<td>Last_Pol</td>
		<td>text</td>
		<td>yes (if no substitute is defined)</td>
		<td>yes</td>
		<td></td>
		<td>Last_Func, Stop_Before_Pol, Stop_Before_Func</td>
		<td>Name of loop's last policy.</td>
	</tr>
	<tr>
		<td>Last_Func</td>
		<td>text</td>
		<td>yes (if no substitute is defined)</td>
		<td>yes</td>
		<td></td>
		<td>Last_Pol, Stop_Before_Pol, Stop_Before_Func</td>
		<td>Identifier of loop's last function.<br>The identifier cannot refer to functions which are independent of the policy spine (func_loop, func_unitloop, etc.).<br>(See 'EUROMOD Functions - Identifiers and the placeholders =cc= and =sys=' for information on identifiers.)</td>
	</tr>
	<tr>
		<td>Stop_Before_Pol</td>
		<td>text</td>
		<td>yes (if no substitute is defined)</td>
		<td>yes</td>
		<td></td>
		<td>Last_Pol, Last_Func, Stop_Before_Func</td>
		<td>Name of the policy before which the loop ends.</td>
	</tr>
	<tr>
		<td>Stop_Before_Func</td>
		<td>text</td>
		<td>yes (if no substitute is defined)</td>
		<td>yes</td>
		<td></td>
		<td>Last_Pol, Last_Func, Stop_Before_Pol</td>
		<td>Identifier of the function before which the loop ends.<br>The identifier cannot refer to functions which are independent of the policy spine (func_loop, func_unitloop, etc.).<br>(See 'EUROMOD Functions - Identifiers and the placeholders =cc= and =sys=' for information on identifiers.)</td>
	</tr>
</table>

<h4>Common Parameters</h4>
<table class="info">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Group</th>
		<th>Compulsory</th>
		<th>Unique</th>
		<th>Default</th>
		<th>Mutually exclusive with</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>Run_Cond</td>
		<td>condition</td>
		<td></td>
		<td>no</td>
		<td>yes</td>
		<td></td>
		<td></td>
		<td>Function is only carried out if the condition is fulfilled. The parameter is intended to be a conditional switch. Thus the condition must not be individual or household based, but refer to a specific processing state or other global condition.</td>
	</tr>
	<tr>
		<td>#_UpLim</td>
		<td>formula</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td>999999999999.99</td>
		<td></td>
		<td>Footnote parameter for the further specification of an operand: replaces operand if operand is higher.</td>
	</tr>
	<tr>
		<td>#_LimPriority</td>
		<td>categorical</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td>upper</td>
		<td></td>
		<td>Footnote parameter for the further specification of an operand:<br>Possible values:<br>If upper limit (#_UpLim) is smaller than lower limit (#_LowLim) ...<br>- upper: ... upper limit dominates;<br>- lower: ... lower limit dominates;<br>- not defined: ... a warning is issued.</td>
	</tr>
	<tr>
		<td>#_Amount</td>
		<td>amount</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td></td>
		<td></td>
		<td>Footnote parameter for the further specification of an operand: indicates the numeric value of an operand.</td>
	</tr>
	<tr>
		<td>#_Level</td>
		<td>taxunit</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td></td>
		<td></td>
		<td>Footnote parameter for the further specification of an operand: indicates an alternative assessment unit for an operand.</td>
	</tr>
	<tr>
		<td>#_AgeMin</td>
		<td>amount</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td>-999999999999</td>
		<td></td>
		<td>Parameter of several queries (e.g. nDepChildrenInTu).</td>
	</tr>
	<tr>
		<td>#_AgeMax</td>
		<td>amount</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td>999999999999</td>
		<td></td>
		<td>Parameter of several queries (e.g. nDepChildrenInTu).</td>
	</tr>
	<tr>
		<td>#_DataBasename</td>
		<td>text</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td></td>
		<td></td>
		<td>Parameter of query IsUsedDatabase.</td>
	</tr>
	<tr>
		<td>#_N</td>
		<td>amount</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td></td>
		<td></td>
		<td>Parameter of query IsNtoMchild.</td>
	</tr>
	<tr>
		<td>#_M</td>
		<td>amount</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td></td>
		<td></td>
		<td>Parameter of query IsNtoMchild.</td>
	</tr>
	<tr>
		<td>#_Val</td>
		<td>variable or incomelist</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td></td>
		<td></td>
		<td>Parameter of query HasMaxValInTu.</td>
	</tr>
	<tr>
		<td>#_Income</td>
		<td>variable or incomelist</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td></td>
		<td></td>
		<td>Parameter of several queries (e.g. GetPartnerIncome).</td>
	</tr>
	<tr>
		<td>#_Info</td>
		<td>variable</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td></td>
		<td></td>
		<td>Parameter of several queries (e.g. GetPartnerInfo).</td>
	</tr>
	<tr>
		<td>#_Unique</td>
		<td>yes/no</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td></td>
		<td></td>
		<td>Parameter of query HasMaxValInTu.</td>
	</tr>
	<tr>
		<td>#_Adults_Only</td>
		<td>yes/no</td>
		<td></td>
		<td>no</td>
		<td>no (but group must differ)</td>
		<td></td>
		<td></td>
		<td>Parameter of query HasMaxValInTu.</td>
	</tr>
</table>
</body>
</html>
