<!DOCTYPE html>
<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<link rel="stylesheet" href="files/style.css" />
<title>The Merge Tool for Configuration files</title>
</head>

<body>

<h1>The Merge Tool for Configuration files</h1>

<p>The user interface provides a tool that supports the merging
of two versions of the EUROMOD configuration files:  VARCONFIG.xml, EXCHANGERATESCONFIG.xml, HICPCONFIG.xml, SWITCHABLEPOLICYCONFIG.xml
(see <a href="EM_WW_Variables.htm">Working
with EUROMOD - Administration of EUROMOD variables</a> and <a
href="EM_FS_FileStructure.htm">EUROMOD Installation and Architecture - EUROMOD
content (parameter files)</a>). Imagine developer A and developer
B both have edited EUROMOD configuration files. The tool firstly allows viewing
what was changed by developer A and what by developer B.<a href="#_ftn1" name="_ftnref1" title="">[1]</a>
Secondly, the tool offers facilities to determine which changes are to be
overtaken in the final merged version.</p>

<h4>Selecting the versions</h4>

<p>Clicking the button <i>Merge
config files</i> (found in the <i>Administration Tools</i> or <i>Version Control</i> ribbon, depending 
on whether you have Version Control installed) opens a dialog which allows defining the versions which are to be merged,
whereupon one of the versions is always one of the EUROMOD configuration files, which is
currently loaded by the user interface. This version is referred to as the <strong><i>Local
Version</i></strong>.</p>

<p>Consequently, the dialog allows for loading a <strong><i>Remote
Version</i></strong>, which is the EUROMOD configuration file
that should be merged with the <i>Local Version</i>.</p>

<p>Moreover, a <strong><i>Parent Version</i></strong> can be selected from the <i>Advanced Options</i>. This
is the version from which as well the local as the remote version started from,
i.e. ideally the base where the two versions diverged. This parent version is
used by the interface (solely) to decide whether a change occurred in the local
version or in the remote version.<a href="#_ftn2" name="_ftnref2" title="">[2]</a></p>

<p>Taking into account, that a parent version may not always be
available, the dialog allows that either the local (by checking the box <i>Use Local</i>) or the remote version (by
checking the box <i>Use Remote</i>) may be
defined as the parent version, meaning that all changes are considered as
remote respectively local. By default (without selecting any parent version from the advanced options), the local version will be defined as parent version.</p> 

<p>Clicking <i>OK</i>
performs the comparison, which, depending on the extent of differences, may
take a while. The duration of the check is considerably increased if all
country-specific descriptions have to be compared when comparing the VarConfig.xml file. Therefore, a checkbox <i>Skip Country-Label Check</i> allows for
skipping this check.</p>

<p>Once the comparison is finalised the <i>merge dialog</i> is opened.</p>

<h4>The merge dialog</h4>

<p>The merge dialog is split up into two areas.</p>
<ul>
	<li>The (big) upper part displays the changes (see <i>Representation of changes</i>)</li>

	<li>The (small) lower part comprises three buttons, which allow for performing the merge (see <i>Performing
	the merge - button Apply</i>) or interrupting one's work by optionally saving the so far taken definitions (see <i>Interrupting
	one's work - buttons Save and</i> <i>Close</i>).</li>
</ul>

<h5>Representation of changes</h5>

<p>When comparting the VarConfig.xml files, the upper and main part of the merge dialog comprises a
register with the following three tabs:</p>
<ul>
	<li><i>Variables</i>: This tab lists changes of the EUROMOD variables, i.e. added and deleted variables as well as changes in variables settings.</li>

	<li><i>Acronyms</i>: This tab displays changes in the acronyms by which EUROMOD variables are built
	(see <a href="EM_WW_Variables.htm">Working with EUROMOD - Administration of EUROMOD variables</a>).</li>

	<li><i>Country Labels</i>: This tab lists changes in the country-specific descriptions of the variables.</li>

</ul>

<p>When comparting other files, only one tab appears.</p>

<p>The structure of the tabs is very similar. The main
part of each tab is taken by two &quot;lists&quot;, where the left one presents
the local version, whereas the right one presents the remote version. The two
lists are synchronised so that one can see local and remote version
side-by-side. That means, amongst others, that expanding or scrolling in one of
the two lists always effects in the same move of the other list. Initially the
two lists are an extract of the two versions, in the sense that only those
parts are displayed which contain changes. This initial view can be further
reduced by filtering changes, as described below.</p>

<p>The <i>Acronym</i>-tab is
different from the other three tabs in the sense that it shows a
tree-structure, i.e. acronyms (e.g. the acronym <i>ur</i> for urban) are arranged in
acronym-levels (e.g. the acronym-level <i>region</i>),
which are themselves arranged in acronym-types (e.g. the acronym-type <i>Demographic</i>).<a href="#_ftn3" name="_ftnref3" title="">[3]</a>
This tree-structure allows for collapsing and expanding the information, and
therewith for more clearness.<a href="#_ftn4" name="_ftnref4" title="">[4]</a></p>

<p>Another mentionable, though seldom relevant, particularity
concerns the <i>Country-Labels</i>-tab. If a
whole country is added or removed from the user interface, this causes that
(possibly empty) country-specific descriptions are added/removed to/from all
variables. This is indicated by the entry &quot;<i>Labels for country 'CC' added/removed</i>&quot; in the list of changes.</p>

<p>The bottom part of the tab fulfils two tasks: The
left-bottom-part allows for filtering the changes. That means it provides
options to show only certain types of changes. As an example, one may want to
see only added variables, but not anything else (i.e. deleted or changed
variables).</p>

<p>The right-bottom-part allows for accepting and rejecting
changes, i.e. determining which changes are to be overtaken into the merged
version. For more information see <i>Defining
the carrying out of the merge</i> below.</p>

<h6>Types and representation of changes</h6>

<p>In principle, there are three types of changes:</p>
<ul>
	<li><strong>Additions</strong> (of e.g. variables) are displayed by a green plus at the left edge of the list.</li>

	<li>Accordingly, <strong>removals</strong> are displayed by a red minus.</li>

	<li><strong>Changes</strong>
	are marked by a pencil. A &quot;change&quot; of e.g. a variable may mean that
	the name of the variable is changed or that the monetary-status of the variable
	is changed. Which of these settings is changed is represented by highlighting
	the respective cell with either red or green colour (the meaning of red and
	green will be explained in the paragraph after the next).</li>
</ul>

<p>Whether a change is local or remote is represented by
showing the plus/minus/pencil and the highlighting in either the (left) local
tree or the (right) remote tree. Note that for added components the respective
other tree shows an empty row (as the component does not exist in this
version). For deleted components the concerned tree shows the name (for better
understanding), while the other tree (where the component still exists) shows
the full information.</p>

<p>Alongside each change-symbol (plus/minus/pencil) there is
another symbol, which indicates whether the change is accepted or rejected,
i.e. should go into the merged version or not. Accepted changes are accompanied
by a green hook, whereas rejected changes are accompanied by a red cross.
Moreover, there is a third symbol, an arrow pointing to the right. This symbol
may show up if e.g. a variable has several changes, i.e. the name and the
monetary-status is changed. The arrow is displayed if these changes are partly
accepted and partly rejected. Whether the changes are accepted or rejected, 
is represented by the colour of the highlighting. Green highlighting
marks an accepted change, while red highlighting marks a rejected change.</p>

<h6>Filtering changes</h6>

<p>The merge tool offers, in the left-bottom part of the
dialog, several options to hide and show different types of changes, with the
intent to provide the user with a better overview.</p>

<p><i>Remote / Local:</i></p>
<ul>
	<li><i>Local and Remote</i>: With this option checked as well local as remote changes are displayed.</li>

	<li><i>Local only</i>:
	With this option checked only local changes are displayed. For a better
	understanding note that the displays of the local and remote list are still
	synchronised, i.e. show the same components. However, if for example a variable
	is changed in the remote version, but not in the local version, this variable
	will not be visible (neither in the local nor in the remote list).</li>

	<li><i>Remote only</i>: With this option checked only remote changes are displayed, in the same sense as described above for <i>Local only</i>.</li>
</ul>

<p><i>Type:</i></p>
<ul>
	<li><i>Added</i>: Checking this option effects that added components are
	displayed (unless they are out-ruled by a <i>Level</i>- or <i>Remote/Local</i>-filter), while
	unchecking the option means that added components are not displayed.</li>

	<li><i>Removed</i>: Checking/unchecking this option effects the same for removed components as described above for added components.</li>

	<li><i>Changed</i>: In principle checking/unchecking this option effects
	the same for changed components as described above for added components.
	However, the filter can be further refined by showing only selected types of changes:</li>
	<ul>
		<li><i>All Settings / Selected Settings</i>: If the option <i>All Settings</i> is checked, all components with changes in any setting
		are shown. This can however be restricted to, e.g. only show components where a
		certain setting (e.g. name) is changed, by unchecking <i>All Settings</i> and therewith enable the check-boxes alongside the
		single settings. The task is accomplished by unchecking all single-settings
		except the <i>Name</i>-setting.</li>
	</ul>
</ul>
<p><i>Level:</i> This option is only available in the <i>Acronyms</i>-tab<i>.</i></p	>
<ul>
	<li><i>Category</i>: Selecting this option corresponds in fact to no <i>Level</i>-filter.</li>

	<li><i>Acronym</i>: Selecting this option effects that changes of acronym-categories are hidden.</li>

	<li><i>Level</i>: Selecting this option effects that only changes on acronym-level are displayed,
	i.e. acronym- and category-level changes are hidden.</li>

	<li><i>Type</i>: Selecting this option effects that only changes on acronym-type are displayed,
	i.e. acronym-level-, acronym- and category-level changes are hidden.</li>
</ul>

<p>Please note that the filters only take effect once the button <i>Apply / Update Filter</i> is clicked.</p>

<p>The button <i>Release
Filter</i> suspends all filters, i.e. all changes are displayed. Note that this
still does not mean that e.g. all EUROMOD variables are displayed, but only
variables which show any changes, were added or deleted. For technical reasons <i>Release Filter</i> pressed in the <i>Acronym</i>-tab effects, that all acronyms
(including unchanged) are displayed.<a href="#_ftn5" name="_ftnref5" title="">[5]</a></p>

<h5>Defining the carrying out of the merge</h5>

<p>Initially the merge tool suggests accepting all changes,
i.e. overtake them into the merged version. This is reflected by green hooks
and green highlighting. Only if there is a conflict, i.e. a component was
changed in the local version as well as in the remote version, the local
version is preferred, i.e. the remote version shows a red cross (or left-arrow)
and possibly a red highlighting. This default setting can be changed in several
ways.</p>

<h6>Accepting / rejecting all changes</h6>

<p>In the left-bottom part of the dialog the merge tool offers
the buttons <i>Accept All</i> and <i>Reject All</i> to accept respectively reject
all changes. For technical reasons (in context with conflict cases)
accepting/rejecting all changes can be only done for one version at once. In
other words, if one wants to accept <i>all</i>,
i.e. local <i>and</i> remote, changes, one
needs to firstly activate the option <i>Local</i>,
then click the respective button, to repeat the same by activating the option <i>Remote</i>.</p>

<p>Still what &quot;all&quot; effectively means depends on the
option <i>Visible Only</i>. If the option is not activated
&quot;all&quot; actually means all. However, if the option is activated,
filters are taken into account, which is described under <i>Effectiveness of filters</i> below.</p>

<p>Accepting all (local or remote) changes may lead to conflicts,
where the tool needs the user's decision on what to do. For example, if all
remote changes are to be accepted and a variable's name was changed in the
local version as well as in the remote version (i.e. both differ from the
parent version), and the respective local change is currently set to being
accepted, there is a conflict that cannot be solved by the tool without further
information. For such cases, the handling is determined by the options under <i>Conflicts -Prefer ...</i>. 
If the option <i>Local</i> is selected, the tool will
automatically keep the acceptance of the local change and not set the remote
change to accept. If the option <i>Remote</i>
is selected, the tool will set the remote change to accept and automatically
reject the local change. If the option <i>Warn</i>
is selected, the tool issues a warning for each conflict that it is about to
act as if the option <i>Remote</i> (in case
of <i>Accept All</i> remote changes) was
selected and allows the user to refuse this doing.</p>

<h6>Effectiveness of filters</h6>

<p>If the option <i>Visible Only</i> is activated, filters are taken into account. For
example, assume that the option <i>Added</i>
is activated only, while the check-boxes for <i>Removed</i> and <i>Changed</i> are
not ticked. In this case the list of changes would only show added components.
Respectively clicking for example <i>Accept
All</i> will only accept the addition of components, but not the removal or
change. Note however, that no definition set before the clicking of the button
will be reset, i.e. an already accepted removal would not be changed to rejected.</p>

<p>For clarification, it should also be mentioned that
&quot;visible&quot; refers to filters and not to actual visibility. That means
missing visibility due to collapsing has no effect. This is however only
relevant for the <i>Acronyms</i>-tab.</p>

<h6>Accepting / rejecting single changes</h6>

<p>Accepting and rejecting of changes can also be fine-tuned to
single components and even to single settings. For this purpose, the merge tool
provides context menus.</p>

<p>Right-clicking the change-symbols (plus/minus/pencil or
hook/cross) left of the changed component opens a context menu with the options
<i>Accept Changes</i>, <i>Reject Changes</i> and a check-box <i>Visible
Only</i>. The logic behind this is the same as described under <i>Accepting / rejecting all changes</i>, just
that the reference is the respective component (e.g. variable) instead of <i>all</i>.</p>

<p>Right-clicking the cell of a single change, e.g. the change
of the name of a variable, offers the same context menu, except that the option
<i>Visible Only</i>
is not available as it does not make sense. Again, the logic behind this is the
same as described above, just that the reference in this case is the single
change instead of all changes of the variable's settings.</p>

<h5>Interrupting one's work - buttons Save and Close</h5>

<p>If there are many differences between the local and the
remote version it may take quite some consideration to decide what should go
into the finally merged version. Therefore, the merge tool provides a <i>Save</i> button for saving all the so far
taken decisions on accepting and rejecting changes. The merge tool and even the
whole interface can then be closed without loss of the so far accomplished
work. Upon the next time the merge tool is opened, the user interface asks
whether the &quot;in-progress merging&quot; should be used or not.</p>

<p>Note that opening the merge tool with a saved version also
reduces the loading time as the comparison of the local and the remote version
does not have to be repeated.</p>

<p>Also note that the question whether an &quot;in-progress
merging&quot; is to be used is even asked if the merge tool is closed by the <i>Close</i> button, i.e. accepting/rejecting
changes is not saved. The user interface then refers to the copies of the
local-, remote- and parent-version it made at the first opening of the merge
tool (in a sub-folder of the <i>Config</i>-folder, called <i>Merge</i>).
In this case the comparison of versions has to be repeated and loading is not
accelerated.</p>

<p>As however these copies in the <i>Merge</i> folder are at risk to being outdated in the sense that the
local version diverges from the interface's actual version, the interface
performs a respective comparison and, if necessary, warns that &quot;the info
is possibly not up-to-date&quot;.</p>

<h5>Performing the merge - button Apply</h5>

<p>Pressing the <i>Apply</i>
button will perform the merge by taking the decisions on accepting or rejecting
changes into account. Once accomplished the user interface shows this merged
version. All intermediate info (concretely the <i>Merge</i> folder) is deleted.</p>

<p>Please note that the tool may show the info that &quot;...
the local XML-files used for merging are possibly not up-to-date&quot;. This
happens if the configuration file was changed while merging was in progress (see <i>Interrupting one's work - buttons Save and
Close</i>). It is up to the user to decide whether she still wants to perform
the merge.</p>

<p>Finally note that the changes caused by the merge cannot be
undone by using the undo functionality. However, the user interface produces a
backup before starting the action, which can be restored. For more information
see (<a href="EM_WW_BackupRestore.htm">Working with EUROMOD - Backup - Restore</a>).</p>

<p>&nbsp;</p>

</div>

<div>

<hr align=left size=1 width="33%">

<p class="footnote"><a href="#_ftnref1" name="_ftn1" title="">[1]</a> More precisely, the assignment of
changes to one developer can only be accomplished if there is a common base
version. Otherwise the user interface has to assume all changes to be done by
one developer.</p>

<p class="footnote"><a href="#_ftnref2" name="_ftn2" title="">[2]</a>
Technically that means that, for a
beginning, local and remote version are directly
compared. A difference between the two is then considered as local change, if
remote and parent version match and as remote change, if local and parent
version match. If both, local and remote version, diverge from parent version,
the change is classified as a &quot;conflict&quot;.</p>

<p class="footnote"><a href="#_ftnref3" name="_ftn3" title="">[3]</a>
To be precise, there are four levels, as the acronym-level may be further
subdivided into categories, e.g. the acronym <i>in</i> for industry into categories <i>agriculture</i>,
<i>industry</i> and <i>services</i>.</p>

<p class="footnote"><a href="#_ftnref4" name="_ftn4" title="">[4]</a>
Please note that this means that if an acronym is changed the parent-level and
parent-type is visible too. However, the sibling-acronyms are not displayed,
neither the &quot;aunt&quot;-levels (unless they show changes as well).</p>

<p class="footnote"><a href="#_ftnref5" name="_ftn5" title="">[5]</a>
The &quot;technical reason&quot; is that the configuration files merge tool uses the same
platform as the merge tool for countries/add-ons. In the context of a country
it sometimes makes sense to see the whole spine, instead of only changed parts
of the spine. In contrast, viewing all variables does not help to understand
the change in a particular variable. Thus, to enhance performance, only the
&quot;relevant&quot; (i.e. changed) components are loaded. For acronyms, there
is no gain in performance in only loading the changed parts (rather, due to the
tree-structure, it is more complicated), therefore they are completely loaded.</p>

</div>

</body>

</html>
